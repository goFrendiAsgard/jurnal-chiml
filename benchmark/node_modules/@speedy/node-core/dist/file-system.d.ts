export declare namespace fileSystem {
    const getRootPath: () => string;
    function deleteAsync(path: string): Promise<boolean>;
    function readFileAsync(path: string): Promise<string>;
    function readJsonFileAsync<T>(path: string): Promise<T>;
    function glob(patterns: string | string[]): string[];
    /**
     * Find a file recursively in the file system from the starting path upwards.
     *
     * Defaults: fileName: package.json, startPath: process.cwd()
     *
     * @param {string} [fileName="package.json"]
     * @param {string} [startPath=process.cwd()]
     * @returns {(string | undefined)}
     */
    function findFileRecursively(fileName?: string, startPath?: string): string | undefined;
    /**
     * Get a canonicalized absolute path
     *
     * @export
     * @param {string} path
     * @returns {string} canonicalized absolute path
     */
    function getCanonicalPath(path: string): string;
    /**
     * Copy an array of file globs
     * @param source The glob of target files
     * @param destination The path of a destination directory
     */
    function copyAsync(source: string | string[], destination: string): Promise<void[]>;
}
